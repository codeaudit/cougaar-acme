require 'cougaar/communities'
require 'ultralog/enclaves'

# default attributes
attributes = {"INITIAL_EXPIRATION"				=> "180000",
              "ACTIVE_EXPIRATION"					=> "30000",
              "HEALTH_CHECK_EXPIRATION"		=> "30000",
              "DEAD_EXPIRATION"						=> "-1",
              "RESTART_EXPIRATION"				=> "180000",
              "FAILED_RESTART_EXPIRATION"	=> "-1",
              "MOVE_EXPIRATION"						=> "300000",
              "PING_TIMEOUT"							=> "30000",
              "HEARTBEAT_REQUEST_TIMEOUT" => "30000",
              "HEARTBEAT_FREQUENCY"				=> "15000",
              "HEARTBEAT_TIMEOUT"					=> "30000",
              "HEARTBEAT_PCT_OUT_OF_SPEC"	=> "50"}
              
enclave_attributes = {}
enclave_attributes["REAR"] 	= attributes.clone # Copy defaults and override values below

# Example of overriding values per enclave
#enclave_attributes["REAR"]["HEARTBEAT_TIMEOUT"] = "30000"
#enclave_attributes["REAR"]["RESTART_EXPIRATION"] = "180000"

enclave_attributes["FWD"] 	= attributes.clone # Copy defaults and override values below

enclave_attributes["CONUS"] = attributes.clone # Copy defaults and override values below

enclave_attributes["TRANS"] = attributes.clone # Copy defaults and override values below

society.each_enclave do |enclave|
  society.communities.add("1AD-#{enclave}-COMM") do |community|
    community.add_attribute("CommunityType", "Robustness")
    
    enclave_attributes[enclave].each { |attr, value| community.add_attribute(attr, value) }
    
    num_agents = 0
    society.each_enclave_node(enclave) do |node|
      unless node.has_facet?(:role)
        community.add_node(node.name) do |entity|
          entity.add_role("Member")
          entity.add_role("HealthMonitor")
        end
        node.each_agent do |agent|
          num_agents += 1
          community.add_agent(agent.name) do |entity|
            entity.add_role("Member")
          end
        end
      end
    end
    community.add_attribute("NumberOfAgents", num_agents.to_s)
  end
end
