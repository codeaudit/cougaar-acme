####################################################
# Rule to remove the SDRegistrationPlugin and replace it with a
# SDCommunityBasedRegistrationPlugin. Uses the AL SD Use case version
# of these if necessary. Expects the existing component to have the required args
# already.
#
# This rule also adds a "true" agrument to the MatchmakerStubPlugin, as is
# required for the comm-based SD

old_sd_registration_plugin = "org.cougaar.servicediscovery.plugin.SDRegistrationPlugin"
old_al_registration_plugin = "org.cougaar.logistics.plugin.servicediscovery.ALRegistrationPlugin"
new_sd_registration_plugin = "org.cougaar.servicediscovery.plugin.SDCommunityBasedRegistrationPlugin"
new_al_registration_plugin = "org.cougaar.logistics.plugin.servicediscovery.ALCommBasedRegistrationPlugin"
matchmaker_stub_plugin = "org.cougaar.servicediscovery.plugin.MatchmakerStubPlugin"

society.each_agent do |agent|
  agent.each_component do |comp|
      if comp.classname == old_sd_registration_plugin
          comp.classname = new_sd_registration_plugin
          comp.name = comp.comparison_name
      elsif comp.classname == old_al_registration_plugin
          comp.classname = new_al_registration_plugin
          comp.name = comp.comparison_name
      elsif comp.classname == matchmaker_stub_plugin
           unless comp.has_argument?("true")
                comp.add_argument("true")
                comp.name = comp.comparison_name
           end
       end
   end
end

# When using multiple YP servers, turn off caching of keys (they will be
#  different across servers)
society.each_node do |node|
  node.override_parameter("-Dorg.cougaar.servicediscovery.service.tModelCacheDisabled", "true")
end
