
society.each_node do |node|
    node.add_prog_parameter("org.cougaar.core.node.Node") unless node.prog_parameters.include?("org.cougaar.core.node.Node")
    
    node.remove_parameter("-Dorg.cougaar.configuration.database")
    node.remove_parameter("-Dorg.cougaar.configuration.password")
    node.remove_parameter("-Dorg.cougaar.configuration.user")
    node.remove_parameter("-Dorg.cougaar.experiment.id")
    node.remove_parameter("-Dorg.cougaar.control.port")
    node.remove_parameter("-Dorg.cougaar.tools.server.swallowOutputConnectionException")
    node.remove_parameter("-Dorg.cougaar.node.InitializationComponent")
    node.override_parameter("-Dorg.cougaar.core.node.InitializationComponent","XML")
    node.override_parameter("-Dorg.cougaar.core.persistence.enable","true")
    node.override_parameter("-Dorg.cougaar.core.persistence.clear","false")
    node.override_parameter("-Dorg.cougaar.core.logging.config.filename","loggingConfig.conf")
    
    # Add start time/timezone if startTime parameter is not present
    start_time = nil
    node.each_parameter do |param|
      start_time = param if param =~ /agent\.startTime/
    end
    unless start_time
      node.add_parameter('-Dorg.cougaar.core.agent.startTime=08/10/2005')
      node.add_parameter('-Duser.timezone=GMT')
    end
    
    # Preferred log file name
    node.override_parameter("-Dorg.cougaar.core.logging.log4j.appender.SECURITY.File","$COUGAAR_INSTALL_PATH/workspace/log4jlogs/#{node.name}.log")
    
    # To run most societies, you need configs/common and configs/glmtrans
    # on the path. 
    node.override_parameter("-Dorg.cougaar.config.path","$COUGAAR_INSTALL_PATH/configs/common\\\;$COUGAAR_INSTALL_PATH/configs/glmtrans\\\;$COUGAAR_INSTALL_PATH/configs/CnCCalc\\\;")
    
    # ACME Service will replace $COUGAAR_INSTALL_PATH with platform specific path
    node.override_parameter("-Dorg.cougaar.install.path","$COUGAAR_INSTALL_PATH")
    node.override_parameter("-Dorg.cougaar.workspace","$COUGAAR_INSTALL_PATH/workspace")
    node.override_parameter("-Dorg.cougaar.system.path","$COUGAAR_INSTALL_PATH/sys")
    node.override_parameter("-Djava.class.path","$COUGAAR_INSTALL_PATH/lib/bootstrap.jar")
    node.replace_parameter(/\-Xbootclasspath/, "-Xbootclasspath/p:$COUGAAR_INSTALL_PATH/lib/javaiopatch.jar")

    #Java Virtual Machine Parameters
    node.replace_parameter(/\-Xms/, "-Xms768m")
    node.replace_parameter(/\-Xmx/, "-Xmx1536m")
    node.replace_parameter(/\-XX\:ThreadStackSize/, "-XX:ThreadStackSize=256")

    node.each_agent do |agent|
        agent.remove_component("org.cougaar.core.topology.TopologyReaderServlet")
        agent.each_component do |comp|
            if comp.classname == "org.cougaar.mlm.plugin.ldm.LDMSQLPlugin"
                comp.arguments[0].value = "fdm_equip_ref.q"
            end
            if comp.classname == "org.cougaar.mlm.plugin.organization.GLSInitServlet"
		if comp.arguments[0].value == "093FF.oplan.q"
                  comp.arguments[0].value = "093FF.oplan.noncsmart.q"
		end
            end
        end
    end
end
