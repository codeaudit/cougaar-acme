####################################################
# Rule to insert plugins for managing strat trans
# plugin = org.cougaar.mlm.plugin.sample.MCCTriggerCreatorPlugin
# plugin = org.cougaar.planning.ldm.trigger.TriggerManagerPlugin
# plugin = org.cougaar.mlm.plugin.sample.MCCPredictorPlugin
# plugin = org.cougaar.mlm.plugin.sample.MCCAggregatorPlugin
# plugin = org.cougaar.mlm.plugin.sample.MCCAllocatorPlugin

mcc_trigger_creator_plugin = "org.cougaar.mlm.plugin.sample.MCCTriggerCreatorPlugin"
trigger_manager_plugin = "org.cougaar.planning.ldm.trigger.TriggerManagerPlugin"
mcc_predictor_plugin = "org.cougaar.mlm.plugin.sample.MCCPredictorPlugin"
mcc_aggregator_plugin = "org.cougaar.mlm.plugin.sample.MCCAggregatorPlugin"
mcc_allocator_plugin = "org.cougaar.mlm.plugin.sample.MCCAllocatorPlugin"


# Iterate over agents.
society.each_agent do |agent|
  
  if agent.has_facet? { |facet| facet[:role]=='StrategicTransportationProvider' && (facet[:mechanism] == 'ModeSelector') }
    agent.add_component do |c|
      c.classname = mcc_trigger_creator_plugin
    end
    agent.add_component do |c|
      c.classname = trigger_manager_plugin
    end
    agent.add_component do |c|
      c.classname = mcc_predictor_plugin
    end
    agent.add_component do |c|
      c.classname = mcc_aggregator_plugin
    end
    agent.add_component do |c|
      c.classname = mcc_allocator_plugin
    end
  end
end
