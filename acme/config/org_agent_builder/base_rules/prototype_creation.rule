####################################################
# Rule to insert other prototype creation Plugins
# plugin = org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin
# 1_AD: plugin = org.cougaar.logistics.ldm.MEIPrototypeProvider(MEI.q,-PrototypeProvider)
# UA: plugin = com.bbn.fcss.ldm.UAPrototypeProvider(fcsMEI.q,+PrototypeProvider)
# plugin = org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q)
# UA: plugin = org.cougaar.logistics.ldm.PartsPrototypeProvider(Parts.q,+PrototypeProvider)
# 
# Must be loaded before asset providers, so name changed to aaa_prototype_createion.rule

xml_prototype_provider_plugin = "org.cougaar.mlm.plugin.xml.XMLPrototypeProviderPlugin"
mei_prototype_provider = "org.cougaar.logistics.ldm.MEIPrototypeProvider"
parts_prototype_provider = "org.cougaar.logistics.ldm.PartsPrototypeProvider"
ua_prototype_provider = "com.bbn.fcss.ldm.UAPrototypeProvider"
   
# Iterate over agents.
society.each_agent do |agent|
#
# Check if agent has physical assets
  if agent.get_facet(:has_physical_assets) || agent.has_facet? { |facet| facet[:role]=='AmmunitionProvider' && (facet[:mechanism] == 'TerminalAmmunitionPacker') }
    agent.add_component do |c|
      c.classname = xml_prototype_provider_plugin
      # Make the XMLPrototypeProvider loaded at BINDER priority
      # so LDMSQLPlugin always has it - see Bug #1411
      # Comment out for now c.priority = "BINDER"
    end
  end
  #
  # Then check if agent has a role of "AmmunitionProvider" with a mechanism of "TerminalAmmunitionPacker"
  # This would be the OSC agent which needs the XMLPrototypeProviderPlugin  
  # if agent.get_facet(:role) == "AmmunitionProvider" && agent.get_facet(:mechanism) == "TerminalAmmunitionPacker"
  # AMH - covered above

  #
  # Then check if agent has equipment assets
  if agent.get_facet(:has_equipment_assets)
    agent.add_component do |c|
      unless agent.get_facet(:is_ua)     	
	c.classname = mei_prototype_provider
	c.add_argument("MEI.q")
	c.add_argument("-PrototypeProvider")
      else 
	c.classname = ua_prototype_provider
	c.add_argument("fcsMEI.q")
	c.add_argument("+PrototypeProvider")
      end
    end
    # Will this fail for any no UA agents?  Should we add an extra check?
    unless agent.has_facet? { |facet| facet[:role]=='FuelSupplyProvider' && (facet[:mechanism] == 'TruckScheduler') }
      agent.add_component do |c|
	c.classname = parts_prototype_provider
	c.add_argument("Parts.q")
	c.add_argument("+PrototypeProvider") if agent.get_facet(:is_ua)
      end
    end
  end
end
