####################################################
# Rule to insert GLSExpander and GLSAllocator Plugins with arguments
# plugin = org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin
# plugin = org.cougaar.mlm.plugin.organization.GLSExpanderPlugin
# If the agent is a UA agent, do not include the arguments:
#  -- Ammunition
#  -- PackagePOL
#  -- Consumable
# If the agent has a Role == FuelSupplyProvider and a mechanism == TruckScheduler,
# do not insert the arguments: BulkPOL and MaintainInventory.  This is because
# the FSB Agent (only agent that matches the requirements above) does not handle
# these Requirements.

gls_allocator_plugin = "org.cougaar.mlm.plugin.organization.GLSAllocatorPlugin"
gls_expander_plugin = "org.cougaar.mlm.plugin.organization.GLSExpanderPlugin"

society.each_agent do |agent|
  agent.add_component do |c|
    c.classname = gls_expander_plugin
    if agent.get_facet(:has_equipment_assets)
      unless agent.get_facet(:is_ua)
	c.add_argument("Ammunition") unless society.get_facet(:exclude_ammunition)
	c.add_argument("PackagedPOL") unless society.get_facet(:exclude_packaged_pol)
	c.add_argument("Consumable") unless society.get_facet(:exclude_spare_parts)	
      end
      unless agent.has_facet? { |facet| facet[:role]=='FuelSupplyProvider' && (facet[:mechanism] == 'TruckScheduler') }      
	c.add_argument("BulkPOL") unless society.get_facet(:exclude_bulk_pol)
      end
    end
    if agent.get_facet(:has_personnel_assets)
      unless agent.get_facet(:is_ua)
	c.add_argument("Subsistence") unless society.get_facet(:exclude_subsistence)
      end
    end
    if agent.get_facet(:has_personnel_assets) || agent.get_facet(:has_equipment_assets)
      unless agent.has_facet? { |facet| facet[:role]=='FuelSupplyProvider' && (facet[:mechanism] == 'TruckScheduler') }
	c.add_argument("MaintainInventory")
      end
      if agent.get_facet(:is_deployable)
	c.add_argument("StrategicTransportation") unless society.get_facet(:exclude_strategic_transportation)
      end
    end
    if (agent.get_facet(:is_deployable) && (not agent.get_facet(:has_physical_assets)))
      c.add_argument("MaintainInventory")
    end
  end
  agent.add_component do |c|
    c.classname = gls_allocator_plugin
  end
end
