####################################################
# Rule to insert GLMTransOneToManyExpanderPlugin and TranscomVishnuPlugin
# Just at TRANSCOM-7: (echelon_group = "Transcom") && (role = "StrategicTransportationProvider") && (mechanism = "ModeSelector")
#   plugin = org.cougaar.logistics.plugin.trans.base.GLMTransOneToManyExpanderPlugin(envFile=GLMT.TRANSCOM.env.xml)
#   plugin = org.cougaar.logistics.plugin.trans.TranscomVishnuPlugin(envFile=GLMT.TRANSCOM.env.xml)
#
# At EuroTRANSCOM, ConusTRANSCOM (echelon_group = "Transcom") && (role = "Euro...Conus...StrategicTransportationProvider") && (mechanism = "ModeSelector")
#   plugin = org.cougaar.logistics.plugin.trans.base.GLMTransOneToManyExpanderPlugin(envFile=GLMT.TRANSCOM.env.xml)
#   plugin = org.cougaar.logistics.plugin.trans.TranscomVishnuPlugin(envFile=GLMT.TRANSCOM.env.xml)
#
# At AmmoTRANSCOM (echelon_group = "Transcom") && (role = "AmmoStrategicTransportationProvider") && (mechanism = "ModeSelector")
#   plugin = org.cougaar.logistics.plugin.trans.base.GLMTransOneToManyExpanderPlugin(envFile=GLMT.TRANSCOM.env.xml)
#   plugin = org.cougaar.logistics.plugin.trans.TranscomVishnuPlugin(envFile=GLMT.TRANSCOM.env.xml,doesNotNeedAirTransportProvider=true)
#
# Just at TRANSCOM-1 (STUB) (echelon_group = "Transcom") && (role = "StrategicTransportationProvider") && (mechanism = "StubTransportationProvider")
#   plugin = org.cougaar.mlm.plugin.sample.UniversalAllocatorPlugin("Transport") 
# See univeral_allocator.rule

glm_trans_one_to_many_expander_plugin = "org.cougaar.logistics.plugin.trans.base.GLMTransOneToManyExpanderPlugin"
transcom_vishnu_plugin = "org.cougaar.logistics.plugin.trans.TranscomVishnuPlugin"

society.each_agent do |agent|
  if agent.get_facet(:echelon_group) == "Transcom"
    if agent.has_facet? { |facet| (facet[:role].to_s.include? 'StrategicTransportationProvider') && (facet[:mechanism] == 'ModeSelector') }
      agent.add_component do |c|
        c.classname = glm_trans_one_to_many_expander_plugin
        c.add_argument("envFile=GLMT.TRANSCOM.env.xml")
      end
      agent.add_component do |c|
        c.classname = transcom_vishnu_plugin
        c.add_argument("envFile=GLMT.TRANSCOM.env.xml")
        if agent.has_facet? { |facet| facet[:role]== 'AmmoStrategicTransportationProvider' && (facet[:mechanism] == 'ModeSelector') }
          c.add_argument("doesNotNeedAirTransportProvider=true")      #AmmoTranscom need extra arg
        end
      end
    end
  end
end
